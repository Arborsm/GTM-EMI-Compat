plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.1-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:@YARN_MAPPINGS@:v2"
        compileOnlyApi(annotationProcessor("org.projectlombok:lombok:$lombok"))
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven {
            name "cf"
            url "https://cursemaven.com/"
            content {
                includeGroup "curse.maven"
            }
        }
        maven { url = "https://maven.firstdarkdev.xyz/snapshots" } // LDLib
        maven { // Create Forge and Registrate Forge
            url = "https://maven.tterrag.com/"
            content {
                includeGroup("com.tterrag.registrate")
                includeGroup("com.simibubi.create")
                includeGroup("com.jozufozu.flywheel")
            }
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            url = "https://mvn.devos.one/snapshots/"
            content {
                includeGroup("com.tterrag.registrate_fabric")
                includeGroup("io.github.fabricators_of_create.Porting-Lib")
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
